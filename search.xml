<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2019/09/13/2019-wechall-lian-xi/"/>
      <url>/2019/09/13/2019-wechall-lian-xi/</url>
      
        <content type="html"><![CDATA[<hr><p>layout:     post                    # 使用的布局（不需要改）<br>title:      WeChall 刷题               # 标题<br>subtitle:    WeChall 入门练习             # 副标题<br>date:       2019-09-06             # 时间<br>author:     ZS                       # 作者<br>header-img: img/c罗2.jpg       #这篇文章标题背景图片<br>catalog: true                       # 是否归档<br>tags:                               #标签<br>    - CTF</p><hr><h1 id="WeChall-入门练习"><a href="#WeChall-入门练习" class="headerlink" title="WeChall 入门练习"></a>WeChall 入门练习</h1><p><a href="https://www.wechall.net/challs/by/chall_dif/DESC/page-1" target="_blank" rel="noopener">题目链接</a>  </p><h2 id="Get-Sourced"><a href="#Get-Sourced" class="headerlink" title="Get Sourced"></a>Get Sourced</h2><ul><li>检查网页源代码，滑到最下面得到答案  <ul><li><img src="https://ae01.alicdn.com/kf/H03f4db398bda4476aadb881780e46af4U.jpg" alt>  </li><li><code>html_sourcecode</code>  </li></ul></li></ul><h2 id="ASCII"><a href="#ASCII" class="headerlink" title="ASCII"></a>ASCII</h2><ul><li>给了ASCII的整数子，将其转换为对应的字符即可  <ul><li><img src="https://ae01.alicdn.com/kf/H76d2b7414deb4b7ca0786758dc02f7e4b.jpg" alt>  </li></ul></li></ul><h2 id="Encodings-URL"><a href="#Encodings-URL" class="headerlink" title="Encodings: URL"></a>Encodings: URL</h2><ul><li>得到一个url编码的字符串，将其转换为Unicode编码的到一个url  <ul><li><img src="https://ae01.alicdn.com/kf/Ha13364f6b98e46c2b4d741a56adaa6dcr.jpg" alt>  </li></ul></li><li>这道题不用提交答案，只需在登录状态下访问获取到的url即可，前面加上<code>https://www.wechall.net/</code>  </li></ul><h2 id="Stegano-I"><a href="#Stegano-I" class="headerlink" title="Stegano I"></a>Stegano I</h2><ul><li>下载了一张图片，用ue打开，使用16进制模式查看得到答案<code>steganoI</code>  </li></ul><h2 id="WWW-Robots"><a href="#WWW-Robots" class="headerlink" title="WWW-Robots"></a>WWW-Robots</h2><ul><li>介绍了robots协议，访问<code>https://www.wechall.net/robots.txt</code>的到一个链接，  </li><li>访问这个链接<a href="https://www.wechall.net//challenge/training/www/robots/T0PS3CR3T/" target="_blank" rel="noopener">https://www.wechall.net//challenge/training/www/robots/T0PS3CR3T/</a>，直接完成本题。  </li></ul><h2 id="Crypto-Caesar-I"><a href="#Crypto-Caesar-I" class="headerlink" title="Crypto - Caesar I"></a>Crypto - Caesar I</h2><ul><li><p>考察凯撒密码，没给key，那就暴力破解，写个demo  </p></li><li><p><img src="https://ae01.alicdn.com/kf/He4ac6aff37d94e039cfcc8d9af42befaL.jpg" alt>  </p></li><li><p>答案不分大小写：<code>dopghdbpdfsl</code>  </p></li></ul><h2 id="PHP-0817"><a href="#PHP-0817" class="headerlink" title="PHP 0817"></a>PHP 0817</h2><ul><li>考察本地文件包含漏洞  </li><li>构造<code>index.php?which=solution</code>即可，即访问<a href="http://www.wechall.net/challenge/php0817/index.php?which=solution" target="_blank" rel="noopener">http://www.wechall.net/challenge/php0817/index.php?which=solution</a>  </li><li>看了<a href="https://github.com/p1o2p3u1/WeChall/blob/master/Training/PHP0817.md" target="_blank" rel="noopener">大佬的题解</a>还是有点不明白，应该先了解一下php了.  </li></ul><h2 id="Prime-Factory"><a href="#Prime-Factory" class="headerlink" title="Prime Factory"></a>Prime Factory</h2><ul><li>感脚这道题不是考网安的啊，emmmmmm  </li><li>写程序，求大于100万的素数且各数字之和也是素数的数  <ul><li><img src="https://ae01.alicdn.com/kf/H46576a1064ac41a4a72394026efea1e5u.jpg" alt>  </li><li>答案<code>10000331000037</code>  </li></ul></li></ul><h2 id="MySQL-I"><a href="#MySQL-I" class="headerlink" title="MySQL I"></a>MySQL I</h2><ul><li>一道简单的考察sql注入的题，答案不唯一，关键点在于  <ul><li><img src="https://ae01.alicdn.com/kf/H78e409df1f2341ef941220f418a45a3aX.jpg" alt>  </li><li>对于用户的输入没有任何的检测  </li></ul></li><li><a href="https://blog.csdn.net/github_36032947/article/details/78442189" target="_blank" rel="noopener">https://blog.csdn.net/github_36032947/article/details/78442189</a> 这篇博客讲的挺清楚的，可以看看  </li><li>答案不唯一  <ul><li><code>Username:admin&#39;#</code> <code>Password:123</code>  </li><li><code>Username:admin&#39; or &#39;1&#39;=&#39;1</code> <code>Password:123</code>  </li></ul></li></ul><h2 id="Zebra"><a href="#Zebra" class="headerlink" title="Zebra"></a>Zebra</h2><ul><li><p>一张斑马的图片，这不就是条形码码，ps打开，将图形的部分移动使条纹可以用一条直线穿过  </p><p><img src="https://ae01.alicdn.com/kf/Hdcd1c43d1f0244aeac7f4332b4529fd5z.png" alt>  </p></li><li><p>截取最长的部分  </p><p><img src="https://ae01.alicdn.com/kf/H869e403c41384120a5d81a55fe26583fG.png" alt>  </p></li><li><p>随便找一个条形码识别网站<a href="https://demo.dynamsoft.com/DBR/BarcodeReaderDemo.aspx" target="_blank" rel="noopener">比如这个</a>，整进去的到答案<code>saFFari</code><img src="https://ae01.alicdn.com/kf/Hee94e5522bdd4b328fd1461067251617Y.jpg" alt>  </p></li></ul><h2 id="Stegano-Attachment"><a href="#Stegano-Attachment" class="headerlink" title="Stegano Attachment"></a>Stegano Attachment</h2><ul><li><p>下载了一张以php结尾的图片，直接将后缀改为png，用Stegsolve，试了一遍也没有看出来什么。  </p></li><li><p>直接用<code>winhex</code>打开，拖到最后<img src="https://ae01.alicdn.com/kf/H1c7e07ac51f14dafaa7f21ab581c20e3D.jpg" alt>  </p><p>发现了里面有一个名为solution的文件，初步判断应该是有一个压缩包附在了图片的后面，zip文件的文件头标识是：<code>504B0304</code>，jpeg文件的标识头是<code>FFD8FF</code>，结尾标识是<code>FFD9</code>  </p><p><img src="https://ae01.alicdn.com/kf/H54a07ba3b8cb4a16b94f1f48439a356eG.jpg" alt>  </p></li><li><p>将从<code>504B0304</code>到最后的选中右键编辑复制选快到新文件并保存为<code>.zip</code>的文件，解压打开得到solution.txt, 里面就有答案<code>RLGIGOGSOICB</code>  </p></li><li><p>duang ,duang  duang …………..看到有位博主说不用另存文件，直接将源文件用winrar打开，可以直接得到解压后的结果，emmmmm, giao  </p></li></ul><h2 id="Crypto-Transposition-I"><a href="#Crypto-Transposition-I" class="headerlink" title="Crypto - Transposition I"></a>Crypto - Transposition I</h2><ul><li><p>终于有道题可以让我说出 so easy,hahahaha。<code>oWdnreuf</code>, 这不就是<code>wonderful</code> 吗，没错就是每两个字母调换位置，把他们换回来就行了  </p></li><li><p>代码  </p><pre class="line-numbers language-python"><code class="language-python">a <span class="token operator">=</span> <span class="token string">"oWdnreuf.lY uoc nar ae dht eemssga eaw yebttrew eh nht eelttre sra enic roertco drre . Ihtni koy uowlu dilekt  oes eoyrup sawsro don:wa fpsolmgfdd.o"</span>  a <span class="token operator">=</span> list<span class="token punctuation">(</span>a<span class="token punctuation">)</span>  s <span class="token operator">=</span> <span class="token string">""</span>  <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> len<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      s <span class="token operator">+=</span> a<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span>      s <span class="token operator">+=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span>  <span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># Wonderful. You can read the message way better when the letters are in correct order. I think you would like to see your password now: apfosmlfgddo.  </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>答案 <code>apfosmlfgddo</code>  </p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2019/09/13/2019-misc-ti-jie/"/>
      <url>/2019/09/13/2019-misc-ti-jie/</url>
      
        <content type="html"><![CDATA[<hr><p>title:      攻防世界-misc题解               # 标题<br>date:       2019-09-06 09:25:00            # 时间<br>author:     ZS                       # 作者<br>img: img/c罗2.jpg           #这篇文章标题背景图片<br>top: true<br>cover: ture<br>coverImg: img/c罗2.jpg<br>toc: true                      # 是否归档<br>mathjax: false<br>summary: 哈哈哈哈，爱你呀<br>categories: Markdown<br>tags:                               #标签<br>    - CTF<br>categories:<br>    - CTF</p><hr><h1 id="攻防世界：misc题解"><a href="#攻防世界：misc题解" class="headerlink" title="攻防世界：misc题解"></a>攻防世界：misc题解</h1><h3 id="this-is-flag"><a href="#this-is-flag" class="headerlink" title="this_is_flag"></a>this_is_flag</h3><p><code>Most flags are in the form flag{xxx}, for example:flag{th1s_!s_a_d4m0_4la9}</code>  </p><ul><li><p>答案：flag{th1s_!s_a_d4m0_4la9}  </p></li><li><p>喂到嘴里的答案我就是吃不到，菜  </p></li></ul><h3 id="ext3"><a href="#ext3" class="headerlink" title="ext3"></a>ext3</h3><p><code>今天是菜狗的生日，他收到了一个linux系统光盘</code>  </p><ul><li>下载文件  </li><li>查找flag关键字  </li><li>装载文件  </li><li>打开包含flag的文件，找到密文  </li><li>base64编码解密  </li><li><img src="https://ae01.alicdn.com/kf/H007c5173db724aca8fd6304ae901c2e07.jpg" alt>  </li></ul><h3 id="give-you-flag"><a href="#give-you-flag" class="headerlink" title="give_you_flag"></a>give_you_flag</h3><p><code>菜狗找到了文件中的彩蛋很开心，给菜猫发了个表情包</code>  </p><ul><li>给我，你倒是给我啊，批个图批半天，恶心死我了，还好最后能扫了，为自己感动  </li><li>用ps抽帧，找到二维码  </li><li>用画图工具补全二维码  </li><li><img src="https://ae01.alicdn.com/kf/H62bdfa88adc243728a133b962404b89al.jpg" alt>  </li><li><img src="https://ae01.alicdn.com/kf/H2df00906cb744edbb4d542428d0e583d5.jpg" alt>  </li></ul><h3 id="pdf"><a href="#pdf" class="headerlink" title="pdf"></a>pdf</h3><p><code>菜猫给了菜狗一张图，说图下面什么都没有</code>  </p><ul><li>下载图片，用比较高级一点的pdf编辑器，移除图片，出现flag  </li><li><img src="https://ae01.alicdn.com/kf/H4d53257d6d264c9083f884845f539d5dm.jpg" alt>  </li></ul><h3 id="stegano"><a href="#stegano" class="headerlink" title="stegano"></a>stegano</h3><p><code>菜狗收到了图后很开心，玩起了pdf 提交格式为flag{xxx}</code>  </p><ul><li>下载了一个pdf，用谷歌浏览器打开，CTRL+A  -》 CTRL+C，粘贴到txt文件中  <ul><li><img src="https://ae01.alicdn.com/kf/H8656e219d64a4f1c8ca232fdb4cbbba4l.jpg" alt>  </li><li>有一串ab编码，看起来像摩尔斯点码  </li></ul></li><li>把A换成<code>.</code>,B换成<code>_</code>,得到一个串  <ul><li><img src="https://ae01.alicdn.com/kf/Hc01b76cda0a74a039eaafa49f6094f3fd.jpg" alt>  </li><li><code>-.-. --- -. --. .-. .- - ..- .-.. .- - .. --- -. ... --..-- ..-. .-.. .- --. ---... .---- -. ...- .---- ..... .---- -... .-.. ...-- -- ...-- ..... ..... ....- --. ...--</code>  </li></ul></li><li>‘<a href="http://ctf.ssleye.com/morse.html&#39;" target="_blank" rel="noopener">http://ctf.ssleye.com/morse.html&#39;</a> 在这里进行解码的到 <code>congratulations,flag:1nv151bl3m3554g3</code>   <ul><li>答案 <code>flag{1nv151bl3m3554g3}</code>  </li></ul></li></ul><h3 id="SimpleRAR"><a href="#SimpleRAR" class="headerlink" title="SimpleRAR"></a>SimpleRAR</h3><p><code>菜狗最近学会了拼图，这是他刚拼好的，可是却搞错了一块(ps:双图层)</code>  </p><ul><li><p>解压缩文件报错  </p><ul><li><img src="https://ae01.alicdn.com/kf/H142016aa71b44b65a4202449b92393a00.jpg" alt>  </li></ul></li><li><p>ue打开  </p><ul><li><img src="https://ae01.alicdn.com/kf/Ha04a9012b1e94f3ab729299858fa3a5fw.jpg" alt>  </li><li>rar对png的文件类型编码是74，就在flag.txt文件结束，原来是7A，改成了74.  </li></ul></li><li><p>再解压的到了一整啥都没有的图片emmmmm，有问题  </p></li><li><p>ps打开  </p><ul><li>尼玛，不是png格式的打不开，那只能用ue打开看看了  </li><li><img src="https://ae01.alicdn.com/kf/H450c64ff57b74e42be3396e326c13115Y.jpg" alt>  </li><li>原来是gif，玩我，很好，改后缀.gif, 提取每一帧的图片，用stegsolve打开看看，发现半截二维码，他的另一半应该在另一半图片里（艹，我的呢，哭了）  <ul><li><img src="https://ae01.alicdn.com/kf/H45bfb65cf6564b3094f8f46f859948cbP.jpg" alt>  </li><li>另一半<img src="https://ae01.alicdn.com/kf/Hd42dd24a44544db5955a6ddcdb3e1fd7w.jpg" alt>  </li></ul></li></ul></li><li><p>又要批图了，giao  </p><ul><li><img src="https://ae01.alicdn.com/kf/H07323c83cf71454392dd593026b2bc4fN.jpg" alt>  </li></ul></li><li><p>扫描出结果  </p><ul><li><img src="https://ae01.alicdn.com/kf/H7aebd361b15b4797b6bd7d7dab484cd9r.jpg" alt>  </li><li>答案：<code>flag{yanji4n_bu_we1shi}</code>  </li></ul></li></ul><h3 id="坚持60s"><a href="#坚持60s" class="headerlink" title="坚持60s"></a>坚持60s</h3><p><code>菜狗发现最近菜猫不爱理他，反而迷上了菜鸡</code>  </p><ul><li>下载了一个jar包，打开看一看，出题人又玩我，行，你nb  <ul><li><img src="https://ae01.alicdn.com/kf/Hea0764505fcf4b389aa9cd2724d45a25f.jpg" alt>  </li></ul></li><li>反编译jar包，找到了一个flag  <ul><li></li></ul></li></ul><p><img src="https://ae01.alicdn.com/kf/H74045ebb56114cd6a92287e085d656b32.jpg" alt>  </p><ul><li>开心的填了上去，不对，giao，又进行了加密，base64解密得到答案  <ul><li><code>flag{DajiDali_JinwanChiji}</code>  </li></ul></li></ul><h3 id="gif"><a href="#gif" class="headerlink" title="gif"></a>gif</h3><p><code>菜狗截获了一张菜鸡发给菜猫的动态图，却发现另有玄机</code>  </p><ul><li>下载了一个压缩包，解压后发现了一个文件夹，里面又很多图片，哦一黑一白，真像01编码啊，原来是二进制啊，白色代表0黑色代表1，写出来  </li><li><img src="https://ae01.alicdn.com/kf/H820513c9a7c74eda9513b47eb7c447956.jpg" alt>  <ul><li>得到答案<code>flag{FuN_giF}</code>  </li></ul></li></ul><h3 id="掀桌子"><a href="#掀桌子" class="headerlink" title="掀桌子"></a>掀桌子</h3><p><code>菜狗截获了一份报文如下c8e9aca0c6f2e5f3e8c4efe7a1a0d4e8e5a0e6ece1e7a0e9f3baa0e8eafae3f9e4eafae2eae4e3eaebfaebe3f5e7e9f3e4e3e8eaf9eaf3e2e4e6f2，生气地掀翻了桌子(╯°□°）╯︵ ┻━┻</code>  </p><ul><li>获取了一个字符串，一看只有0-9，a-f, 啊刚好是16进制啊，尝试各种解码失败，什么base16都整上了，蠢。  </li><li>16进制转成整数吧，两个一组发现最大的数250， 最小的160，而ascii的可显示字符从32开始，ascii的最大为128，猜想减去128，刚好最小的到32，试一试，成了  </li><li><img src="https://ae01.alicdn.com/kf/H40795c0337f041e98ea411243cec3d5cz.jpg" alt>  <ul><li>答案：<code>flag{hjzcydjzbjdcjkzkcugisdchjyjsbdfr}</code>  </li></ul></li></ul><h3 id="如来十三掌"><a href="#如来十三掌" class="headerlink" title="如来十三掌"></a>如来十三掌</h3><p><code>菜狗为了打败菜猫，学了一套如来十三掌。</code>  </p><ul><li>下载了一个word文件，打开看到了一堆看不懂的‘汉字’，不止所措，看起来像佛语（当然我看不出来）  </li><li>找到了一个网站<code>http://www.keyfc.net/bbs/tools/tudoucode.aspx</code>,填入佛语，得到一个字符串  <ul><li><code>MzkuM3gvMUAwnzuvn3cgozMlMTuvqzAenJchMUAeqzWenzEmLJW9</code>  </li></ul></li><li>十三掌，，rot13加密。。。emmmm这谁想得到啊  <ul><li>解密得到<code>ZmxhZ3tiZHNjamhia3ptbmZyZGhidmNraWpuZHNrdmJramRzYWJ9</code>  </li></ul></li><li>还是看不懂，base64解密得到<code>flag{bdscjhbkzmnfrdhbvckijndskvbkjdsab}</code>  </li><li>这谁想得到啊，啊啊啊啊啊啊啊啊啊啊啊啊啊，又搞了两个小时  </li></ul><h3 id="base64stego"><a href="#base64stego" class="headerlink" title="base64stego"></a>base64stego</h3><p><code>菜狗经过几天的学习，终于发现了如来十三掌最后一步的精髓</code>  </p><ul><li><p>下载了一个文件，解压后发现需要密码，winrar修复了一下发现居然能打开了。记住这个套路了。  </p></li><li><p>解压打开后得到一个txt文件  </p><ul><li><img src="https://ae01.alicdn.com/kf/H19b0140e80fb4b5787f1b942e2b6520cy.jpg" alt>  </li><li>明显的base64加密，在线解密后发现是一个介绍base64隐写的字符串  </li></ul></li><li><p>啊啊啊啊啊啊啊，恶心的隐写，花了快2个小时才搞懂是啥，又花了两个小时敲代码，我佛了，代码献上  </p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">"G://桌面//stego.txt"</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>      a <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span>  s_d <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token keyword">for</span> each <span class="token keyword">in</span> a<span class="token punctuation">:</span>      <span class="token keyword">if</span> each<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'=='</span><span class="token punctuation">:</span>          each <span class="token operator">=</span> each<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span>          m <span class="token operator">=</span> b64_mapping<span class="token punctuation">[</span>each<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span>          mid <span class="token operator">=</span> <span class="token string">'{0:06b}'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>m<span class="token punctuation">)</span>          s_d<span class="token punctuation">.</span>append<span class="token punctuation">(</span>mid<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>      <span class="token keyword">elif</span> each<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'='</span><span class="token punctuation">:</span>          each <span class="token operator">=</span> each<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>          m <span class="token operator">=</span> b64_mapping<span class="token punctuation">[</span>each<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span>          mid <span class="token operator">=</span> <span class="token string">'{0:06b}'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>m<span class="token punctuation">)</span>          s_d<span class="token punctuation">.</span>append<span class="token punctuation">(</span>mid<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  s <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>s_d<span class="token punctuation">)</span>  answer <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span>chr<span class="token punctuation">(</span>int<span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i<span class="token operator">+</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>len<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token keyword">print</span><span class="token punctuation">(</span>answer<span class="token punctuation">)</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>答案<code>flag{Base_sixty_four_point_five}</code>  </li></ul></li><li><p>总结：付出总会有收获的对吧^_^,加油啊  </p></li></ul><h3 id="功夫再高也怕菜刀"><a href="#功夫再高也怕菜刀" class="headerlink" title="功夫再高也怕菜刀"></a>功夫再高也怕菜刀</h3><ul><li>下载一个文件，一看格式不知道是啥，用foremost分离得到一个压缩包  <ul><li>安利这个博主写的foremost使用教程，贼好用<code>https://www.cnblogs.com/cnnnnnn/p/8994362.html</code>  </li></ul></li><li>压缩包里面有一个<strong>flag.txt</strong>文件还需要密码，那就要找密码喽  <ul><li>用wireshark分析流量包，是打开原始文件，分组字节流查找flag，找到了一个名为6666.jpg的文件流  <ul><li><img src="https://ae01.alicdn.com/kf/He1a66d285e464723a044f5e50879a4a7R.jpg" alt>  </li></ul></li><li>追踪该TCP流，jpg以FFD8开始，以最后一个FFD9结尾，  <ul><li><img src="https://ae01.alicdn.com/kf/Hc4abb24097274db0b50c86a6c4dd5cfaH.jpg" alt>  </li></ul></li><li>还要获取到该图片，复制中间的字符串，粘贴到winhex中，注意粘贴时选择ASCII Hex格式，保存为.jpg。  <ul><li><img src="https://ae01.alicdn.com/kf/H6e410f904ffb4585ae78d1258a1a369fn.jpg" alt>  </li></ul></li><li>最后的到的图片，密码<code>Th1s_1s_p4sswd_!!!</code><img src="https://ae01.alicdn.com/kf/H930292aa07cb425d881e43c78d90b204K.jpg" alt>  </li></ul></li><li>压缩包输入密码，得到<code>flag.txt</code>中的答案<code>flag{3OpWdJ-JP6FzK-koCMAK-VkfWBq-75Un2z}</code>  </li><li>两个小时不多不少，哎有收获就行，加油呀，路还很长^_^。  </li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>artical title</title>
      <link href="/2019/09/13/artical-title/"/>
      <url>/2019/09/13/artical-title/</url>
      
        <content type="html"><![CDATA[<p>asdfasdf<br>asdfasdfasdfasdf<br>asdfasdfasdfasdfasdf<br>asdfasdfasdfasdfasdf</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/09/13/hello-world/"/>
      <url>/2019/09/13/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>二零一七年终总结</title>
      <link href="/2018/01/22/2017-conclusion/"/>
      <url>/2018/01/22/2017-conclusion/</url>
      
        <content type="html"><![CDATA[<div align="middle"><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=407679465&auto=1&height=66"></iframe></div><p>时间过得很快，终于等到放寒假了，虽然这几个月没有课，天天和放假也没啥区别呢。细数一下，还有5个月就要毕业了吧，大一刚入学的场景却依然清楚地记得，转眼间就成了老学长了呢。闲来无事，随便写写，有感而发，无病呻吟而已。</p><h1 id="2017"><a href="#2017" class="headerlink" title="2017"></a>2017</h1><hr><p>回顾我的2017，没做什么事，令我能记得就3件大事吧：</p><ul><li>失恋ing</li><li>ACM退役</li><li>顺利保研</li></ul><p><strong>第一件事</strong>就不想过多回忆了，<strong>2014.12.13 ~ 2017.03.01</strong>，曲终人散。<br><img src="749826.jpg" alt><br>最后引用《我的少女时代》里的一句话吧。</p><blockquote><p>每人都有一颗林真心，遇见是最美好的小幸运，谢谢你出现在我的青春里。</p></blockquote><p><img src="1.jpg" alt><br><strong>第二件事</strong>其实也是黯淡退出吧，大三下开始课程繁忙，也就没怎么训练了，再加上暑假考驾照，于是乎就退役了。回顾三年来，从大一入学时电脑都没怎么碰过的小白，到现在算法也略有所知，也是付出过很大的努力吧，毕竟当年每天刷题，为了一个bug而熬夜到凌晨。最后也算是混了个水水的金牌，奖项不算耀眼。但最重要的是从这段经历中，学到了拼搏、坚持的一种精神，这对以后的研究生涯想必也有很大帮助。<br><img src="2.jpg" alt><br><strong>第三件事</strong>也是意料之中吧，没有什么波折。纠结了很多，虽然<strong>专业第一</strong>，但是最后还是选择保了本校。要问原因，也许是校园情怀，也许是导师人很好，也许是为了方便更早研究，也许就是懒吧。现在尘埃落定，靠人靠天不如靠自己，继续努力吧。<br><img src="3.jpg" alt></p><p>过去的一年，学业未有很大长进，看着同学们整页的4.0绩点，心里倒也没有什么不平衡了。下学期保了研之后选了一门研究生的文本挖掘课，也马马虎虎读了几十篇论文，也算是对自然语言处理和深度学习入了个门，最后的presentation做的还算满意。</p><h1 id="2018"><a href="#2018" class="headerlink" title="2018"></a>2018</h1><hr><p>今年最重要的大事莫过于毕业论文了，因为以后要做的方向是句法分析，所以导师给我的毕业论文安排的就是《基于循环神经网络的成分句法分析》。虽然说是基于ACL2013的一篇论文改编的，但是目前为止，我还没有发现有人做和这个完全一样的。也许最后写的好的话可以直接发paper了。</p><p>但是目前基本的框架还没完全搭建起来吧，代码还不是很熟练，现在只写了一个最基础的动态规划+RNN。最近有如下计划：</p><ul><li>准备试一下动态规划+LSTM。</li><li>然后动态规划扩增一个维度，用来保存左右结点的head结点。</li><li>如果这个写好了，就可以和我github找到的PCFG+CYK代码融合了，准备加上每个结点的POS。</li><li>最后加入预训练词向量应该就基本完成了。</li></ul><p>希望能顺利毕业吧，前一段时间一直对一些实现细节有些困惑，代码还写错了，还以为理论错了。也不知道最后出来的结果会怎么样，希望能不错。</p><p>生活方面，最近半年越来越懒了，极少出门，睡得晚，起的也晚。最近买了把尤克里里，也算是陶冶陶冶情操吧，不至于一直盯着电脑。现在也小有长进，能弹一点点了。</p><p>现在能聊天的人越来越少了，QQ微信放那一天也不一定会有人来找，就算有人也多半是咨询问题的，等一个可以交心的人吧。有时我也想过，我是不是太像中央空调了，对所有人都这么有耐心，到头来却还是一个人，付出那么多最后还是一无所有。<br><img src="4.jpg" alt><br>最后还是祝自己2018年顺利吧，希望毕业顺利，研究生涯小有收获，最后等一个有缘人吧。</p><blockquote><p>我遇见谁，会有怎样的对白。<br>我等的人，她在多远的未来。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
